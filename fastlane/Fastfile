require 'plist'

# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.63.1"

default_platform :ios

platform :ios do
  before_all do

  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Update the build number to the count of Git commits"
  lane :bump_version do
    build_number = sh("git rev-list --count HEAD").delete("\n")

    # Plists to update
    app_plist = "../Dependn/Info.plist"
    watch_plist = "../Watch/Info.plist"
    watch_ext_plist = "../Watch Extension/Info.plist"

    update_plist_build_number app_plist, build_number
    update_plist_build_number watch_plist, build_number
    update_plist_build_number watch_ext_plist, build_number
  end

  def update_plist_build_number(plist_path, build_number)
    plist_fullpath = File.expand_path(plist_path)
    info_plist = Plist::parse_xml(plist_fullpath)
    info_plist['CFBundleVersion'] = build_number
    File.write(plist_fullpath, info_plist.to_plist)
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    cocoapods

    # match(type: "appstore") # more information: https://codesigning.guide
    gym(scheme: "Dependn") # Build your app - more options available
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :appstore do
    cocoapods

    # match(type: "appstore")
    # snapshot
    gym(scheme: "Dependn") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end



# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
